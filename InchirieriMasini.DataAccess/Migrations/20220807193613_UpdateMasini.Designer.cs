// <auto-generated />
using System;
using InchirieriMasini.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InchirieriMasini.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220807193613_UpdateMasini")]
    partial class UpdateMasini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InchirieriMasini.Models.MarcaMasina", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<DateTime>("DataCrearii")
                        .HasColumnType("datetime2");

                    b.Property<string>("DenumireMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("MarciMasini");
                });

            modelBuilder.Entity("InchirieriMasini.Models.Masina", b =>
                {
                    b.Property<int>("IdMasina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMasina"), 1L, 1);

                    b.Property<int>("AnFabricatie")
                        .HasColumnType("int");

                    b.Property<bool>("DisponibilitateMasina")
                        .HasColumnType("bit");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<string>("ImagineMasina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MasaTotala")
                        .HasColumnType("real");

                    b.Property<string>("ModelMasina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumarInmatriculare")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("NumarUsi")
                        .HasColumnType("int");

                    b.Property<float>("TarifPeLuna")
                        .HasColumnType("real");

                    b.Property<float>("TarifPeSaptamana")
                        .HasColumnType("real");

                    b.Property<float>("TarifPeZi")
                        .HasColumnType("real");

                    b.Property<string>("TipCombustibil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipCutieViteza")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("IdMasina");

                    b.HasIndex("IdMarca");

                    b.ToTable("Masini");
                });

            modelBuilder.Entity("InchirieriMasini.Models.Masina", b =>
                {
                    b.HasOne("InchirieriMasini.Models.MarcaMasina", "MarcaMasina")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarcaMasina");
                });
#pragma warning restore 612, 618
        }
    }
}
